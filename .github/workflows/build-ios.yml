name: 🍎 Build iOS IPA - محوّل سرعة SR3H

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'نوع البناء'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - ad-hoc
        - app-store

jobs:
  build-ios:
    name: 🍎 Build iOS App
    runs-on: macos-latest
    timeout-minutes: 60
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🍎 Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.13.9'
        channel: 'stable'
        
    - name: 🔧 Verify Flutter Installation
      run: |
        echo "🔍 Checking Flutter installation..."
        if ! command -v flutter &> /dev/null; then
          echo "❌ Flutter not found, installing manually..."
          cd $HOME
          git clone https://github.com/flutter/flutter.git -b stable --depth 1
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          export PATH="$HOME/flutter/bin:$PATH"
        fi
        flutter --version
        flutter doctor -v
        
    - name: 📦 Install Dependencies
      run: |
        echo "🔍 Flutter version:"
        flutter --version
        echo "🔧 Disable analytics..."
        flutter config --no-analytics
        echo "📦 Getting dependencies..."
        flutter pub get
        echo "🔧 Resolving dependency conflicts..."
        flutter pub deps
      
    - name: 🔧 Clean iOS Build
      run: |
        flutter clean
        cd ios
        rm -rf Pods
        rm -rf .symlinks
        rm -rf Flutter/Flutter.framework
        rm -rf Flutter/Flutter.podspec
        rm -rf build/
        
    - name: 🔧 Pod Install with iOS 12.0
      run: |
        cd ios
        pod install --repo-update
        
    - name: 📝 Create Export Options
      run: |
        cat > ios/ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>${{ github.event.inputs.build_type }}</string>
            <key>teamID</key>
            <string></string>
            <key>compileBitcode</key>
            <false/>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <false/>
            <key>signingStyle</key>
            <string>automatic</string>
        </dict>
        </plist>
        EOF
        
    - name: 📱 Build iOS (No Codesign)
      run: |
        echo "🔧 Building iOS app without code signing..."
        flutter build ios --release --no-codesign --verbose
        
        echo "📁 Checking build output..."
        ls -la build/ios/ || echo "No build/ios directory"
        find build -name "*.app" -type d | head -5
        
    - name: 🏗️ Build Archive with Xcode
      run: |
        cd ios
        echo "🏗️ Building archive with Xcode..."
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath ../build/ios/Runner.xcarchive \
                   archive \
                   CODE_SIGNING_ALLOWED=NO \
                   CODE_SIGNING_REQUIRED=NO \
                   CODE_SIGN_IDENTITY="" \
                   PROVISIONING_PROFILE="" \
                   DEVELOPMENT_TEAM="" \
                   -allowProvisioningUpdates
        
        echo "📁 Checking archive..."
        ls -la ../build/ios/ || echo "No build/ios directory"
        
    - name: 📦 Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath ../build/ios/Runner.xcarchive \
                   -exportPath ../build/ios/ipa \
                   -exportOptionsPlist ExportOptions.plist \
                   -allowProvisioningUpdates
        
    - name: 📦 Create Manual IPA (Fallback)
      if: failure()
      run: |
        echo "🔍 Searching for Runner.app..."
        find . -name "Runner.app" -type d | head -5
        
        # Try different possible locations
        if [ -d "build/ios/iphoneos/Runner.app" ]; then
          echo "✅ Found Runner.app in build/ios/iphoneos/"
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r ../../../sr3h-ios-manual.ipa Payload/
        elif [ -d "build/ios/Release-iphoneos/Runner.app" ]; then
          echo "✅ Found Runner.app in build/ios/Release-iphoneos/"
          cd build/ios/Release-iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r ../../../sr3h-ios-manual.ipa Payload/
        elif [ -d "ios/build/Release-iphoneos/Runner.app" ]; then
          echo "✅ Found Runner.app in ios/build/Release-iphoneos/"
          cd ios/build/Release-iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r ../../../sr3h-ios-manual.ipa Payload/
        else
          echo "❌ Runner.app not found in any expected location"
          echo "📁 Available directories:"
          find . -name "*.app" -type d | head -10
          # Create a dummy IPA to prevent complete failure
          mkdir -p temp_payload
          echo "SR3H iOS App - Build Failed" > temp_payload/README.txt
          zip -r sr3h-ios-build-failed.ipa temp_payload/
        fi
        
    - name: 📋 List Generated Files
      run: |
        echo "=== Generated Files ==="
        find build/ios -name "*.ipa" -o -name "*.app" | head -10
        ls -la build/ios/ipa/ || echo "No ipa directory"
        ls -la *.ipa || echo "No IPA in root"
        
    - name: 📤 Upload IPA Artifact (Xcode Export)
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: SR3H-VideoConverter-IPA-${{ github.event.inputs.build_type }}
        path: |
          build/ios/ipa/*.ipa
          build/ios/Runner.xcarchive
        retention-days: 30
        
    - name: 📤 Upload Manual IPA (Fallback)
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: SR3H-VideoConverter-IPA-Manual
        path: |
          sr3h-ios-manual.ipa
          sr3h-ios-build-failed.ipa
        retention-days: 30
        
    - name: 📊 Build Summary
      if: always()
      run: |
        echo "## 🍎 iOS Build Complete!" >> $GITHUB_STEP_SUMMARY
        echo "✅ **App Name:** محوّل سرعة SR3H" >> $GITHUB_STEP_SUMMARY
        echo "📱 **Version:** 2.0.6 (206)" >> $GITHUB_STEP_SUMMARY
        echo "🔧 **Build Type:** ${{ github.event.inputs.build_type }}" >> $GITHUB_STEP_SUMMARY
        echo "📱 **iOS Target:** 12.0+" >> $GITHUB_STEP_SUMMARY
        echo "🎯 **Devices:** iPhone, iPad" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "build/ios/ipa/*.ipa" ]; then
          echo "📦 **IPA Size:** $(du -h build/ios/ipa/*.ipa | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Status:** IPA Created Successfully" >> $GITHUB_STEP_SUMMARY
        elif [ -f "sr3h-ios-manual.ipa" ]; then
          echo "📦 **IPA Size:** $(du -h sr3h-ios-manual.ipa | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **Status:** Manual IPA Created (Fallback)" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Status:** Build Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 Installation Instructions:" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the IPA from Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "2. Use AltStore, Sideloadly, or 3uTools" >> $GITHUB_STEP_SUMMARY
        echo "3. Install with your Apple ID" >> $GITHUB_STEP_SUMMARY
        echo "4. Trust the developer in Settings" >> $GITHUB_STEP_SUMMARY
